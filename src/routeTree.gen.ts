/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TheFairFeastImport } from './routes/the-fair-feast'
import { Route as StagHuntImport } from './routes/stag-hunt'
import { Route as RPScLSpImport } from './routes/r-p-sc-l-sp'
import { Route as PrisonersNetworkImport } from './routes/prisoners-network'
import { Route as PrisonersDilemmaImport } from './routes/prisoners-dilemma'
import { Route as LearnImport } from './routes/learn'
import { Route as GamesImport } from './routes/games'
import { Route as CommunityChestImport } from './routes/community-chest'
import { Route as ChallengeImport } from './routes/challenge'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TheFairFeastRoute = TheFairFeastImport.update({
  id: '/the-fair-feast',
  path: '/the-fair-feast',
  getParentRoute: () => rootRoute,
} as any)

const StagHuntRoute = StagHuntImport.update({
  id: '/stag-hunt',
  path: '/stag-hunt',
  getParentRoute: () => rootRoute,
} as any)

const RPScLSpRoute = RPScLSpImport.update({
  id: '/r-p-sc-l-sp',
  path: '/r-p-sc-l-sp',
  getParentRoute: () => rootRoute,
} as any)

const PrisonersNetworkRoute = PrisonersNetworkImport.update({
  id: '/prisoners-network',
  path: '/prisoners-network',
  getParentRoute: () => rootRoute,
} as any)

const PrisonersDilemmaRoute = PrisonersDilemmaImport.update({
  id: '/prisoners-dilemma',
  path: '/prisoners-dilemma',
  getParentRoute: () => rootRoute,
} as any)

const LearnRoute = LearnImport.update({
  id: '/learn',
  path: '/learn',
  getParentRoute: () => rootRoute,
} as any)

const GamesRoute = GamesImport.update({
  id: '/games',
  path: '/games',
  getParentRoute: () => rootRoute,
} as any)

const CommunityChestRoute = CommunityChestImport.update({
  id: '/community-chest',
  path: '/community-chest',
  getParentRoute: () => rootRoute,
} as any)

const ChallengeRoute = ChallengeImport.update({
  id: '/challenge',
  path: '/challenge',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/challenge': {
      id: '/challenge'
      path: '/challenge'
      fullPath: '/challenge'
      preLoaderRoute: typeof ChallengeImport
      parentRoute: typeof rootRoute
    }
    '/community-chest': {
      id: '/community-chest'
      path: '/community-chest'
      fullPath: '/community-chest'
      preLoaderRoute: typeof CommunityChestImport
      parentRoute: typeof rootRoute
    }
    '/games': {
      id: '/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof GamesImport
      parentRoute: typeof rootRoute
    }
    '/learn': {
      id: '/learn'
      path: '/learn'
      fullPath: '/learn'
      preLoaderRoute: typeof LearnImport
      parentRoute: typeof rootRoute
    }
    '/prisoners-dilemma': {
      id: '/prisoners-dilemma'
      path: '/prisoners-dilemma'
      fullPath: '/prisoners-dilemma'
      preLoaderRoute: typeof PrisonersDilemmaImport
      parentRoute: typeof rootRoute
    }
    '/prisoners-network': {
      id: '/prisoners-network'
      path: '/prisoners-network'
      fullPath: '/prisoners-network'
      preLoaderRoute: typeof PrisonersNetworkImport
      parentRoute: typeof rootRoute
    }
    '/r-p-sc-l-sp': {
      id: '/r-p-sc-l-sp'
      path: '/r-p-sc-l-sp'
      fullPath: '/r-p-sc-l-sp'
      preLoaderRoute: typeof RPScLSpImport
      parentRoute: typeof rootRoute
    }
    '/stag-hunt': {
      id: '/stag-hunt'
      path: '/stag-hunt'
      fullPath: '/stag-hunt'
      preLoaderRoute: typeof StagHuntImport
      parentRoute: typeof rootRoute
    }
    '/the-fair-feast': {
      id: '/the-fair-feast'
      path: '/the-fair-feast'
      fullPath: '/the-fair-feast'
      preLoaderRoute: typeof TheFairFeastImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/challenge': typeof ChallengeRoute
  '/community-chest': typeof CommunityChestRoute
  '/games': typeof GamesRoute
  '/learn': typeof LearnRoute
  '/prisoners-dilemma': typeof PrisonersDilemmaRoute
  '/prisoners-network': typeof PrisonersNetworkRoute
  '/r-p-sc-l-sp': typeof RPScLSpRoute
  '/stag-hunt': typeof StagHuntRoute
  '/the-fair-feast': typeof TheFairFeastRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/challenge': typeof ChallengeRoute
  '/community-chest': typeof CommunityChestRoute
  '/games': typeof GamesRoute
  '/learn': typeof LearnRoute
  '/prisoners-dilemma': typeof PrisonersDilemmaRoute
  '/prisoners-network': typeof PrisonersNetworkRoute
  '/r-p-sc-l-sp': typeof RPScLSpRoute
  '/stag-hunt': typeof StagHuntRoute
  '/the-fair-feast': typeof TheFairFeastRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/challenge': typeof ChallengeRoute
  '/community-chest': typeof CommunityChestRoute
  '/games': typeof GamesRoute
  '/learn': typeof LearnRoute
  '/prisoners-dilemma': typeof PrisonersDilemmaRoute
  '/prisoners-network': typeof PrisonersNetworkRoute
  '/r-p-sc-l-sp': typeof RPScLSpRoute
  '/stag-hunt': typeof StagHuntRoute
  '/the-fair-feast': typeof TheFairFeastRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/challenge'
    | '/community-chest'
    | '/games'
    | '/learn'
    | '/prisoners-dilemma'
    | '/prisoners-network'
    | '/r-p-sc-l-sp'
    | '/stag-hunt'
    | '/the-fair-feast'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/challenge'
    | '/community-chest'
    | '/games'
    | '/learn'
    | '/prisoners-dilemma'
    | '/prisoners-network'
    | '/r-p-sc-l-sp'
    | '/stag-hunt'
    | '/the-fair-feast'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/challenge'
    | '/community-chest'
    | '/games'
    | '/learn'
    | '/prisoners-dilemma'
    | '/prisoners-network'
    | '/r-p-sc-l-sp'
    | '/stag-hunt'
    | '/the-fair-feast'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ChallengeRoute: typeof ChallengeRoute
  CommunityChestRoute: typeof CommunityChestRoute
  GamesRoute: typeof GamesRoute
  LearnRoute: typeof LearnRoute
  PrisonersDilemmaRoute: typeof PrisonersDilemmaRoute
  PrisonersNetworkRoute: typeof PrisonersNetworkRoute
  RPScLSpRoute: typeof RPScLSpRoute
  StagHuntRoute: typeof StagHuntRoute
  TheFairFeastRoute: typeof TheFairFeastRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ChallengeRoute: ChallengeRoute,
  CommunityChestRoute: CommunityChestRoute,
  GamesRoute: GamesRoute,
  LearnRoute: LearnRoute,
  PrisonersDilemmaRoute: PrisonersDilemmaRoute,
  PrisonersNetworkRoute: PrisonersNetworkRoute,
  RPScLSpRoute: RPScLSpRoute,
  StagHuntRoute: StagHuntRoute,
  TheFairFeastRoute: TheFairFeastRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/challenge",
        "/community-chest",
        "/games",
        "/learn",
        "/prisoners-dilemma",
        "/prisoners-network",
        "/r-p-sc-l-sp",
        "/stag-hunt",
        "/the-fair-feast"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/challenge": {
      "filePath": "challenge.tsx"
    },
    "/community-chest": {
      "filePath": "community-chest.tsx"
    },
    "/games": {
      "filePath": "games.tsx"
    },
    "/learn": {
      "filePath": "learn.tsx"
    },
    "/prisoners-dilemma": {
      "filePath": "prisoners-dilemma.tsx"
    },
    "/prisoners-network": {
      "filePath": "prisoners-network.tsx"
    },
    "/r-p-sc-l-sp": {
      "filePath": "r-p-sc-l-sp.tsx"
    },
    "/stag-hunt": {
      "filePath": "stag-hunt.tsx"
    },
    "/the-fair-feast": {
      "filePath": "the-fair-feast.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
